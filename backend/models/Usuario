const db = require('../database/database');
const bcrypt = require('bcryptjs');

class Usuario {
  static async criar(dadosUsuario) {
    const { nome, email, senha, cargo, departamento, salario } = dadosUsuario;
    const senhaHash = await bcrypt.hash(senha, 10);
    
    return new Promise((resolve, reject) => {
      const sql = `INSERT INTO usuarios (nome, email, senha, cargo, departamento, salario) 
                   VALUES (?, ?, ?, ?, ?, ?)`;
      
      db.run(sql, [nome, email, senhaHash, cargo, departamento, salario], function(err) {
        if (err) reject(err);
        else resolve({ id: this.lastID, ...dadosUsuario });
      });
    });
  }

  static async buscarPorEmail(email) {
    return new Promise((resolve, reject) => {
      db.get('SELECT * FROM usuarios WHERE email = ?', [email], (err, row) => {
        if (err) reject(err);
        else resolve(row);
      });
    });
  }

  static async listarTodos() {
    return new Promise((resolve, reject) => {
      db.all('SELECT id, nome, email, cargo, departamento, salario, data_cadastro, ativo FROM usuarios', 
        (err, rows) => {
          if (err) reject(err);
          else resolve(rows);
        });
    });
  }

  static async validarSenha(senhaTexto, senhaHash) {
    return await bcrypt.compare(senhaTexto, senhaHash);
  }
}

module.exports = Usuario;